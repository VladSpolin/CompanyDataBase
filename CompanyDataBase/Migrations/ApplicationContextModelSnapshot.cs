// <auto-generated />
using System;
using CompanyDataBase.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyDataBase.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Brigade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeOfWorkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("TypeOfWorkId");

                    b.ToTable("Brigades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FacilityId = 1,
                            Name = "brigade of masons",
                            TypeOfWorkId = 1
                        },
                        new
                        {
                            Id = 2,
                            FacilityId = 2,
                            Name = "brigade of plasterers",
                            TypeOfWorkId = 2
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.BuildingMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Measure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuildingMaterials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Measure = "kg",
                            Name = "sand"
                        },
                        new
                        {
                            Id = 2,
                            Measure = "kg",
                            Name = "cement"
                        },
                        new
                        {
                            Id = 3,
                            Measure = "pallet",
                            Name = "brick"
                        },
                        new
                        {
                            Id = 4,
                            Measure = "litres",
                            Name = "oil"
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Number")
                        .HasMaxLength(15)
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vadim",
                            Number = 375111111111m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Egor",
                            Number = 375113312211m
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Minsk, Belarus",
                            Name = "BrusHouse"
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("Age")
                        .HasColumnType("bigint");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20L,
                            CompanyId = 1,
                            Name = "Alex",
                            Salary = 1000m
                        },
                        new
                        {
                            Id = 2,
                            Age = 21L,
                            CompanyId = 1,
                            Name = "Bob",
                            Salary = 1100m
                        },
                        new
                        {
                            Id = 3,
                            Age = 22L,
                            CompanyId = 1,
                            Name = "John",
                            Salary = 1200m
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeOfWorkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique()
                        .HasFilter("[ClientId] IS NOT NULL");

                    b.HasIndex("TypeOfWorkId");

                    b.ToTable("Facilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Minsk, Belarus",
                            ClientId = 1,
                            Name = "Belact",
                            TypeOfWorkId = 1
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Minsk, Belarus",
                            ClientId = 2,
                            Name = "Epam",
                            TypeOfWorkId = 2
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.MaterialUse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BuildingMaterialId")
                        .HasColumnType("int");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingMaterialId");

                    b.HasIndex("FacilityId");

                    b.ToTable("MaterialUses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingMaterialId = 1,
                            Count = 1000L,
                            FacilityId = 1
                        },
                        new
                        {
                            Id = 2,
                            BuildingMaterialId = 2,
                            Count = 100L,
                            FacilityId = 2
                        },
                        new
                        {
                            Id = 3,
                            BuildingMaterialId = 3,
                            Count = 40L,
                            FacilityId = 2
                        },
                        new
                        {
                            Id = 4,
                            BuildingMaterialId = 4,
                            Count = 50L,
                            FacilityId = 2
                        },
                        new
                        {
                            Id = 5,
                            BuildingMaterialId = 1,
                            Count = 1000L,
                            FacilityId = 1
                        },
                        new
                        {
                            Id = 6,
                            BuildingMaterialId = 2,
                            Count = 400L,
                            FacilityId = 2
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.SpecialEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("SpecialEquipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FacilityId = 1,
                            Name = "Amkador"
                        },
                        new
                        {
                            Id = 2,
                            FacilityId = 1,
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = 3,
                            FacilityId = 1,
                            Name = "MAZ"
                        },
                        new
                        {
                            Id = 4,
                            FacilityId = 2,
                            Name = "KAMAZ"
                        },
                        new
                        {
                            Id = 5,
                            FacilityId = 2,
                            Name = "MAN"
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.TypeOfWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfWorks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "reconstruction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "building"
                        },
                        new
                        {
                            Id = 3,
                            Name = "lining"
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Brigadier", b =>
                {
                    b.HasBaseType("CompanyDataBase.Models.DbModels.Employee");

                    b.Property<int?>("BrigadeId")
                        .HasColumnType("int")
                        .HasColumnName("Brigadier_BrigadeId");

                    b.Property<decimal>("Number")
                        .HasMaxLength(15)
                        .HasColumnType("decimal(20,0)");

                    b.HasIndex("BrigadeId")
                        .IsUnique()
                        .HasFilter("[Brigadier_BrigadeId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Brigadier");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Age = 30L,
                            CompanyId = 1,
                            Name = "Anton",
                            Salary = 2000m,
                            BrigadeId = 1,
                            Number = 375444875745m
                        },
                        new
                        {
                            Id = 4,
                            Age = 40L,
                            CompanyId = 1,
                            Name = "Maxim",
                            Salary = 2000m,
                            BrigadeId = 2,
                            Number = 375444874565m
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Builder", b =>
                {
                    b.HasBaseType("CompanyDataBase.Models.DbModels.Employee");

                    b.Property<int?>("BrigadeId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("BrigadeId");

                    b.HasDiscriminator().HasValue("Builder");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Age = 40L,
                            CompanyId = 1,
                            Name = "Nikolai",
                            Salary = 1300m,
                            BrigadeId = 2,
                            Position = "plasterer"
                        },
                        new
                        {
                            Id = 7,
                            Age = 40L,
                            CompanyId = 1,
                            Name = "Aleksandr",
                            Salary = 1300m,
                            BrigadeId = 2,
                            Position = "builder"
                        },
                        new
                        {
                            Id = 8,
                            Age = 40L,
                            CompanyId = 1,
                            Name = "Evgeniy",
                            Salary = 1300m,
                            BrigadeId = 1,
                            Position = "mason"
                        },
                        new
                        {
                            Id = 9,
                            Age = 40L,
                            CompanyId = 1,
                            Name = "Sergei",
                            Salary = 1300m,
                            BrigadeId = 1,
                            Position = "mason"
                        },
                        new
                        {
                            Id = 10,
                            Age = 40L,
                            CompanyId = 1,
                            Name = "Nikolai",
                            Salary = 1300m,
                            BrigadeId = 1,
                            Position = "builder"
                        });
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Brigade", b =>
                {
                    b.HasOne("CompanyDataBase.Models.DbModels.Facility", "Facility")
                        .WithMany("BrigadeList")
                        .HasForeignKey("FacilityId");

                    b.HasOne("CompanyDataBase.Models.DbModels.TypeOfWork", "TypeOfWorks")
                        .WithMany("BrigadeList")
                        .HasForeignKey("TypeOfWorkId");

                    b.Navigation("Facility");

                    b.Navigation("TypeOfWorks");
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Employee", b =>
                {
                    b.HasOne("CompanyDataBase.Models.DbModels.Company", "ItsCompany")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId");

                    b.Navigation("ItsCompany");
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Facility", b =>
                {
                    b.HasOne("CompanyDataBase.Models.DbModels.Client", "ItsClient")
                        .WithOne("ItsFacility")
                        .HasForeignKey("CompanyDataBase.Models.DbModels.Facility", "ClientId");

                    b.HasOne("CompanyDataBase.Models.DbModels.TypeOfWork", "WorkType")
                        .WithMany()
                        .HasForeignKey("TypeOfWorkId");

                    b.Navigation("ItsClient");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.MaterialUse", b =>
                {
                    b.HasOne("CompanyDataBase.Models.DbModels.BuildingMaterial", "ItsBuildingMaterial")
                        .WithMany()
                        .HasForeignKey("BuildingMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyDataBase.Models.DbModels.Facility", "Facility")
                        .WithMany()
                        .HasForeignKey("FacilityId");

                    b.Navigation("Facility");

                    b.Navigation("ItsBuildingMaterial");
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.SpecialEquipment", b =>
                {
                    b.HasOne("CompanyDataBase.Models.DbModels.Facility", "ItsFacility")
                        .WithMany()
                        .HasForeignKey("FacilityId");

                    b.Navigation("ItsFacility");
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Brigadier", b =>
                {
                    b.HasOne("CompanyDataBase.Models.DbModels.Brigade", "ItsBrigade")
                        .WithOne("ItsBrigadier")
                        .HasForeignKey("CompanyDataBase.Models.DbModels.Brigadier", "BrigadeId");

                    b.Navigation("ItsBrigade");
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Builder", b =>
                {
                    b.HasOne("CompanyDataBase.Models.DbModels.Brigade", "ItsBrigade")
                        .WithMany("Builders")
                        .HasForeignKey("BrigadeId");

                    b.Navigation("ItsBrigade");
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Brigade", b =>
                {
                    b.Navigation("Builders");

                    b.Navigation("ItsBrigadier")
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Client", b =>
                {
                    b.Navigation("ItsFacility")
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Company", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.Facility", b =>
                {
                    b.Navigation("BrigadeList");
                });

            modelBuilder.Entity("CompanyDataBase.Models.DbModels.TypeOfWork", b =>
                {
                    b.Navigation("BrigadeList");
                });
#pragma warning restore 612, 618
        }
    }
}
